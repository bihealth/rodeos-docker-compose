version: "3.8"

# Define default configuration for RODEOS.
x-rodeos: &default-rodeos
  command: run-tests
  #command: sleep infinity
  #command: run-ingest
  image: ghcr.io/bihealth/rodeos-ingest:${RODEOS_VERSION}
  #image: rodeos-ingest:debug
  environment: &default-rodeos-environment
    RODEOS_INGEST_PATH: ${RODEOS_INGEST_PATH}
    RODEOS_EVENT_HANDLER: ${RODEOS_EVENT_HANDLER}
    RODEOS_TARGET_COLLECTION: ${RODEOS_TARGET_COLLECTION}
    WAIT_HOSTS: "postgres:5432, redis:6379, irods:1247"
    LC_ALL: en_US.UTF-8
    CELERY_BROKER_URL: redis://redis:6379/0
    CELERY_CHDIR: /usr/src/app
    CELERY_CREATE_DIRS: "1"
    DATABASE_URL: postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/rodeos
    CONN_MAX_AGE: "0"
    IRODS_AUTHENTICATION_SCHEME: ${IRODS_AUTHENTICATION_SCHEME}
    IRODS_DEFAULT_HASH_SCHEME: ${IRODS_DEFAULT_HASH_SCHEME}
    IRODS_HOST: ${IRODS_HOST}
    IRODS_PORT: ${IRODS_PORT}
    IRODS_USER: ${IRODS_USER}
    IRODS_PASS: ${IRODS_PASS}
    IRODS_ZONE_NAME: ${IRODS_ZONE_NAME}
  networks:
    - rodeos
  restart: unless-stopped

services:
  rodeos:
    <<: *default-rodeos
    depends_on:
      - redis
      - irods

  irods:
    image: ghcr.io/bihealth/irods-docker:${IRODS_VERSION}
    ports:
      - "1247:1247"
    hostname: irods  # iRODS really does not like the hash names
    command: irods-start
    environment:
      IRODS_HOST_NAME: irods
      IRODS_ICAT_DBSERVER: ${POSTGRES_HOST}
      IRODS_ICAT_DBUSER: ${POSTGRES_USERNAME}
      IRODS_ICAT_DBPASS: ${POSTGRES_PASSWORD}
      IRODS_ADMIN_USER: ${IRODS_USER}
      IRODS_ADMIN_PASS: ${IRODS_PASS}
      IRODS_ZONE_NAME: ${IRODS_ZONE_NAME}
      IRODS_AUTHENTICATION_SCHEME: ${IRODS_AUTHENTICATION_SCHEME}
      IRODS_CLIENT_SERVER_NEGOTIATION: ${IRODS_CLIENT_SERVER_NEGOTIATION}
      IRODS_CLIENT_SERVER_POLICY: ${IRODS_CLIENT_SERVER_POLICY}
      IRODS_ZONE_KEY: ${IRODS_ZONE_KEY}
      IRODS_NEGOTIATION_KEY: ${IRODS_NEGOTIATION_KEY}
      IRODS_PASSWORD_SALT: ${IRODS_PASSWORD_SALT}
      IRODS_CONTROL_PLANE_KEY: ${IRODS_CONTROL_PLANE_KEY}
      IRODS_SSL_CERTIFICATE_CHAIN_FILE: ${IRODS_SSL_CERTIFICATE_CHAIN_FILE}
      IRODS_SSL_CERTIFICATE_KEY_FILE: ${IRODS_SSL_CERTIFICATE_KEY_FILE}
      IRODS_SSL_DH_PARAMS_FILE: ${IRODS_SSL_DH_PARAMS_FILE}
      IRODS_SSL_VERIFY_SERVER: ${IRODS_SSL_VERIFY_SERVER}
      IRODS_DEFAULT_HASH_SCHEME: ${IRODS_DEFAULT_HASH_SCHEME}
    depends_on:
      - postgres
    networks:
      - rodeos
    restart: unless-stopped
    shm_size: '2gb'
    volumes:
      - type: bind  # configuration
        source: ./config/irods/etc
        target: /etc/irods
      - type: bind  # log files
        source: ./volumes/irods/log
        target: /var/lib/irods/log
      - type: bind  # mass data files
        source: ./volumes/irods/vault
        target: /data/Vault

  postgres:
    image: postgres:11
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - rodeos
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./volumes/postgres/data
        target: /var/lib/postgresql/data

  redis:
    image: redis:6
    networks:
      - rodeos
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./volumes/redis/data
        target: /data

networks:
  rodeos: 
